<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.model.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="article_classification_id" jdbcType="INTEGER" property="articleClassificationId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sketch" jdbcType="VARCHAR" property="sketch" />
    <result column="author" jdbcType="INTEGER" property="author" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="read_num" jdbcType="INTEGER" property="readNum" />
    <result column="good_num" jdbcType="INTEGER" property="goodNum" />
    <result column="order" jdbcType="INTEGER" property="order" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.model.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, article_classification_id, title, sketch, author, create_time, read_num, good_num, 
    order
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.Article">
    insert into article (id, article_classification_id, title, 
      sketch, author, create_time, 
      read_num, good_num, order, 
      content)
    values (#{id,jdbcType=INTEGER}, #{articleClassificationId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{sketch,jdbcType=VARCHAR}, #{author,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{readNum,jdbcType=INTEGER}, #{goodNum,jdbcType=INTEGER}, #{order,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleClassificationId != null">
        article_classification_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="sketch != null">
        sketch,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="readNum != null">
        read_num,
      </if>
      <if test="goodNum != null">
        good_num,
      </if>
      <if test="order != null">
        order,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleClassificationId != null">
        #{articleClassificationId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sketch != null">
        #{sketch,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readNum != null">
        #{readNum,jdbcType=INTEGER},
      </if>
      <if test="goodNum != null">
        #{goodNum,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Article">
    update article
    <set>
      <if test="articleClassificationId != null">
        article_classification_id = #{articleClassificationId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sketch != null">
        sketch = #{sketch,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readNum != null">
        read_num = #{readNum,jdbcType=INTEGER},
      </if>
      <if test="goodNum != null">
        good_num = #{goodNum,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        order = #{order,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.model.Article">
    update article
    set article_classification_id = #{articleClassificationId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      sketch = #{sketch,jdbcType=VARCHAR},
      author = #{author,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      read_num = #{readNum,jdbcType=INTEGER},
      good_num = #{goodNum,jdbcType=INTEGER},
      order = #{order,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Article">
    update article
    set article_classification_id = #{articleClassificationId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      sketch = #{sketch,jdbcType=VARCHAR},
      author = #{author,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      read_num = #{readNum,jdbcType=INTEGER},
      good_num = #{goodNum,jdbcType=INTEGER},
      order = #{order,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>